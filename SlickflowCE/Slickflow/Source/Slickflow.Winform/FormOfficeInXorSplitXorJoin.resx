<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kFQAjzXjRvdijt1Nc/+CTvdHJxZLKoDHiuNy70g9OAv5RN6MSwpveVosqQAeZcZOtPP4N87OsqSIebrP
        c9RJKoCHm6sTMY88gs/14/x32QskFcAjNM3pp0/n+/sXu7vX6+s3q6u94/X9ecwbZ69n+P5fV1auNjfj
        JS3N//D6EkgFsGARj7M//oh4xCH7+s2b3qE85mGfyBtfUsQPuvz11/jR5atZKKkAnlz8Az8O4hGPy3fv
        YvHxsFND95cUsYCIb3j+8aNtiacmFcBP4PToqCtExOZ8f9/l/56TVACQkAoAElIBQEIqAEhIBQAJqQAg
        IRUAJKQCgIRUAJCQCgASUgFAQioASEgFAAmpACAhFQAkpAKAhFQAkJAKABJSAUBCKgBISAUACakAICEV
        ACSkAoCEVACQkAoAElIBQEIqAEhIBQAJqQAgIRUAJKQCgIRUAJCQCgASUgFAQioASEgFAAmpACAhFQAk
        pAKAhFQAkJAKABJSAUBCKgBISAUACakAYKq//vrr77///j8191gH44NRmwAAAABJRU5ErkJggg==
</value>
  </data>
</root>