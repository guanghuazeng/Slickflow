<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>